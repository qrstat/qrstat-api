# Creating multi-stage build for production
FROM node:18-alpine as build
RUN echo "http://mirror.yandex.ru/mirrors/alpine/v3.21/main" > /etc/apk/repositories && \
  echo "http://mirror.yandex.ru/mirrors/alpine/v3.21/community" >> /etc/apk/repositories && \
  apk update
RUN apk add --no-cache build-base gcc autoconf automake zlib-dev libpng-dev nasm bash vips-dev git
ENV NODE_ENV=production
ENV NODE_ENV=${NODE_ENV}
ENV npm_config_disturl=https://nodejs.org/dist/

WORKDIR /opt/
COPY package.json yarn.lock ./
RUN yarn global add node-gyp
RUN yarn config set network-timeout 600000 -g && yarn install --production
RUN yarn add sharp --ignore-engines
ENV PATH=/opt/node_modules/.bin:$PATH
WORKDIR /opt/app
COPY . .
RUN yarn build

# Creating final production image
FROM node:18-alpine
RUN echo "http://mirror.yandex.ru/mirrors/alpine/v3.21/main" > /etc/apk/repositories && \
  echo "http://mirror.yandex.ru/mirrors/alpine/v3.21/community" >> /etc/apk/repositories && \
  apk update
RUN apk add --no-cache vips vips-dev
ENV NODE_ENV=production
ENV NODE_ENV=${NODE_ENV}
ENV npm_config_disturl=https://nodejs.org/dist/
WORKDIR /opt/
COPY --from=build /opt/node_modules ./node_modules
WORKDIR /opt/app
COPY --from=build /opt/app ./
RUN yarn rebuild sharp
ENV PATH=/opt/node_modules/.bin:$PATH

RUN chown -R node:node /opt/app
USER node
EXPOSE 1337
CMD ["yarn", "start"]
